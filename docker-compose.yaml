version: "3.2"
services:
  db:
    restart: always
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - db-net

  backend:
    restart: always
    container_name: backend
    command : pipenv run ./manage.py runserver 0.0.0.0:8000
    build:
      context: ./backend/
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - db-net
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - DEBUG='true'
    volumes:
      - ./backend:/app/backend

  frontend:
    restart: always
    command : npm start
    container_name: front
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    stdin_open: true
    depends_on:
      - backend
    volumes:
      - ./frontend:/app/frontend

networks:
  db-net:
    driver: bridge